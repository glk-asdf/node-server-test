{"version":3,"sources":["webpack:///src/components/table/TableBase.vue","webpack:///./src/components/table/TableBase.vue?e8f6","webpack:///./src/components/table/TableBase.vue"],"names":["TableBase","name","data","tableData","total","static","actualPageSize","actualCurrentPage","selectData","props","pageSize","default","type","Number","currentPage","validator","value","Object","common","api","promise_default","a","resolve","Function","query","isinit","Boolean","staticData","Array","pagerCount","columns","hideOnSinglePage","components","beforeCreate","created","this","init","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","watch","computed","maxPage","Math","ceil","isApi","directives","events","inserted","el","binding","vnode","arr","_len","arguments","length","_key","_ref$events","undefined","extends_default","_loop","_i","fn","event","apply","concat","toConsumableArray_default","i","v","k","replace","match","toLowerCase","componentInstance","$off","$on","filter","methods","handleSizeChange","val","setCurrentPageData","handleCurrentChange","start","end","slice","setCurrentPageDataByApi","refresh","_this","pageNumber","then","_ref2","code","console","log","saveSelectData","selection","row","getSelectData","hasTemplate","template","templateAttr","_ref3","_ref3$attr","attr","_ref3$attrByRow","attrByRow","_len2","_key2","_fn","fnC","_len3","_key3","$common","table_TableBase","render","_vm","_h","$createElement","_c","_self","staticClass","staticStyle","width","attrs","stripe","on","selection-change","_l","column","_b","key","prop","scopedSlots","_u","scope","rawName","$index","expression","tag","click","$event","handle","model","property","callback","$$v","$set","_v","_s","content","hide-on-single-page","current-page","page-sizes","page-size","pager-count","layout","size-change","current-change","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"mIA6DAA,GACAC,KAAA,QACAC,KAFA,WAGA,OAIAC,aAEAC,MAAA,EAEAC,QAAA,EAEAC,eAAA,GAEAC,kBAAA,EACAC,gBAGAC,OAEAC,UAEAC,QAAA,EACAC,KAAAC,QAIAC,aACAH,QAAA,EACAC,KAAAC,OACAE,UAAA,SAAAC,GAGA,OAAAC,OAAAC,EAAA,SAAAD,CAAAD,EAAA,KAAAA,KAAA,IAIAG,KACAR,QAAA,oCAAAS,EAAAC,EAAAC,YACAV,KAAAW,UAGAC,OACAb,QAAA,aACAC,KAAAK,QAGAQ,QACAd,SAAA,EACAC,KAAAc,SAGAC,YACAhB,QAAA,qBACAC,KAAAgB,OAGAC,YACAlB,QAAA,EACAC,KAAAC,QAIAiB,SACAnB,QAAA,qBACAC,KAAAgB,OAGAG,kBACApB,SAAA,EACAC,KAAAc,UAGAM,cAOAC,aAjFA,aAmFAC,QAnFA,WAqFAC,KAAAC,QAEAC,YAvFA,aAyFAC,QAzFA,aA2FAC,aA3FA,aA6FAC,QA7FA,aA+FAC,cA/FA,aAiGAC,UAjGA,aAmGAC,SACAC,UAEAC,QAFA,WAGA,OAAAC,KAAAC,KAAAZ,KAAA/B,MAAA+B,KAAA7B,iBAGA0C,MANA,WAOA,OAAA/B,OAAAC,EAAA,MAAAD,CAAAkB,KAAAhB,OAGA8B,YACAC,QAEAC,SAFA,SAEAC,EAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAArC,MACAkC,EAcA,mBAAAM,EAAAC,UAAAC,OAAAH,EAAA3B,MAAA4B,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAJ,EAAAI,EAAA,GAAAF,UAAAE,GAAA,IAAAC,GAAAH,UAAAC,OAAA,QAAAG,IAAAJ,UAAA,GAAAA,UAAA,OAAAP,cAAAW,IAAAD,OACAV,EAAmBY,OAAnBZ,GADA,IAAAa,EAAA,SAEAC,GACA,IAAAC,EAAAf,EAAAc,GACA,mBAAAC,IACAf,EAAAc,GAAA,SAAAE,GAAA,OAAAD,EAAAE,WAAAN,GAAAK,GAAAE,OAAAb,OAHA,QAAAS,KAAAd,EAAAa,EAAAC,GAOA,OAAAd,GAvBAiB,WAAAN,EAAAQ,IAAAd,IACA,QAAAe,KAAApB,EAAA,CACA,IAAAqB,EAAArB,EAAAoB,GACAE,EAAAF,EAAAG,QAAA,kBAAAC,GAAA,UAAAA,EAAAC,gBAEArB,EAAAsB,kBAAAC,KAAAL,GACAlB,EAAAsB,kBAAAE,IAAAN,EAAAD,OAsBAQ,UACAC,SAOAC,iBAPA,SAOAC,GAEA/C,KAAA7B,eAAA4E,EAEA/C,KAAAgD,sBAMAC,oBAjBA,SAiBAF,GAEA/C,KAAA5B,kBAAA2E,EAEA/C,KAAAgD,sBAKA/C,KA1BA,WA4BAD,KAAA7B,eAAA6B,KAAAzB,SAEAyB,KAAA5B,kBAAA4B,KAAArB,YAAA,IAAAqB,KAAArB,YAEAG,OAAAC,EAAA,KAAAD,CAAAkB,KAAAR,WAAA,YACAQ,KAAA9B,QAAA,EACA8B,KAAA/B,MAAA+B,KAAAR,WAAA+B,QAEAvB,KAAAV,QAIAU,KAAAgD,sBAKAA,mBA7CA,WAgDA,GAAAhD,KAAA9B,OAAA,CAOA8B,KAAA5B,kBAAA4B,KAAA5B,kBAAA4B,KAAAU,QAAAV,KAAAU,QAAAV,KAAA5B,kBAEA,IAAA8E,GAAAlD,KAAA5B,kBAAA,GAAA4B,KAAA7B,eACAgF,EAAAnD,KAAA5B,kBAAA4B,KAAA7B,eACA6B,KAAA9B,SACA8B,KAAAhC,UAAAgC,KAAAR,WAAA4D,MAAAF,EAAAC,SAXAnD,KAAAqD,2BAiBAC,QAlEA,WAmEAtD,KAAAgD,sBAKAK,wBAxEA,WAwEA,IAAAE,EAAAvD,KACAA,KAAAhB,IAAA2C,KACApD,SAAAyB,KAAA7B,eACAqF,WAAAxD,KAAA5B,mBACA4B,KAAAX,QACAoE,KAAA,SAAAC,GAAA,IAAA3F,EAAA2F,EAAA3F,KACA,IAAAA,EAAA4F,MAIAJ,EAAAtF,MAAAa,OAAAC,EAAA,KAAAD,CAAAf,EAAA,mBACAwF,EAAAvF,UAAAc,OAAAC,EAAA,KAAAD,CAAAf,EAAA,uBAJA6F,QAAAC,IAAA,aAUAC,eAzFA,SAyFAC,EAAAC,GACAhE,KAAA3B,WAAA0F,GAKAE,cA/FA,WAgGA,OAAAjE,KAAA3B,YAOA6F,YAvGA,SAuGAC,GACA,GAAArF,OAAAC,EAAA,KAAAD,CAAAqF,EAAA,UACA,UAUAC,aAnHA,WAmHA,IAAAC,EAAA/C,UAAAC,OAAA,QAAAG,IAAAJ,UAAA,GAAAA,UAAA,MAAAgD,EAAAD,EAAAE,YAAA7C,IAAA4C,OAAAE,EAAAH,EAAAI,iBAAA/C,IAAA8C,OACAC,EAAkB9C,OAAlB8C,GADA,QAAAC,EAAApD,UAAAC,OAAAH,EAAA3B,MAAAiF,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAvD,EAAAuD,EAAA,GAAArD,UAAAqD,GAEA,QAAAxC,KAAAsC,EAAA,CACA,IAAAG,EAAAH,EAAAtC,GACA,mBAAAyC,IACAH,EAAAtC,GAAAyC,EAAA5C,WAAAN,EAAAQ,IAAAd,KAIA,OAAaO,OAAb4C,EAAAE,IAMAI,IAlIA,SAkIA/C,GAAA,QAAAgD,EAAAxD,UAAAC,OAAAH,EAAA3B,MAAAqF,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA3D,EAAA2D,EAAA,GAAAzD,UAAAyD,GACA/E,KAAAgF,QAAAH,IAAA/C,GAAAE,WAAAN,EAAAQ,IAAAd,OC7Ue6D,GADEC,OAFjB,WAA0B,IAAAC,EAAAnF,KAAaoF,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,0CAAoDF,EAAA,YAAiBG,aAAaC,MAAA,QAAeC,OAAQ5H,KAAAoH,EAAAnH,UAAA4H,OAAA,IAAiCC,IAAKC,mBAAAX,EAAArB,kBAAuCqB,EAAAY,GAAAZ,EAAA,iBAAAa,GAAwC,OAAAb,EAAAjB,YAAA8B,EAAA7B,UAAAmB,EAAA,kBAAAH,EAAAc,IAAwEC,IAAAF,EAAAzB,KAAA4B,KAAAC,YAAAjB,EAAAkB,KAA0CH,IAAA,UAAApE,GAAA,SAAAwE,GAAiC,OAAAnB,EAAAY,GAAAC,EAAA,kBAAA7B,EAAArG,GAAwD,OAAAwH,EAAAnB,EAAAlD,GAAAkE,EAAAc,IAA8BnF,aAAahD,KAAA,SAAAyI,QAAA,WAAA1H,OAAAsF,EAAAmC,EAAAE,OAAAF,EAAAtC,IAAAsC,GAAAG,WAAA,+CAA4IP,IAAApI,EAAA4I,IAAA,YAAAb,IAA+Bc,MAAA,SAAAC,GAAyBzB,EAAAN,IAAAV,EAAA0C,OAAAP,EAAAE,OAAAF,EAAAtC,IAAAsC,KAA0DQ,OAAQjI,MAAAyH,EAAAtC,IAAAsC,EAAAN,OAAAe,UAAAC,SAAA,SAAAC,GAAkE9B,EAAA+B,KAAAZ,EAAAtC,IAAAsC,EAAAN,OAAAe,SAAAE,IAAgDR,WAAA,qCAAgD,YAAAtB,EAAAf,aAAAD,EAAAmC,EAAAE,OAAAF,EAAAtC,IAAAsC,IAAA,IAAAnB,EAAAgC,GAAAhC,EAAAiC,GAAAjD,EAAAkD,mBAAyH,kBAAArB,EAAAzB,MAAA,IAAAe,EAAA,kBAAAH,EAAAc,IAAoEC,IAAAF,EAAAzB,KAAA4B,MAAqB,kBAAAH,EAAAzB,MAAA,QAAwC,GAAAY,EAAAgC,GAAA,KAAA7B,EAAA,iBAAsCK,OAAO2B,sBAAAnC,EAAAvF,iBAAA2H,eAAApC,EAAA/G,kBAAAoJ,cAAA,eAAAC,YAAAtC,EAAAhH,eAAAuJ,cAAAvC,EAAAzF,WAAAiI,OAAA,0CAAA1J,MAAAkH,EAAAlH,OAAkP4H,IAAK+B,cAAAzC,EAAArC,iBAAA+E,iBAAA1C,EAAAlC,wBAA6E,IAEhkD6E,oBCCjB,IAcAC,EAdyBC,EAAQ,OAcjCC,CACEpK,EACAoH,GATF,EAVA,SAAAiD,GACEF,EAAQ,SAaV,kBAEA,MAUeG,EAAA,EAAAJ,EAAiB","file":"static/js/0.79c754c65d57d863aefc.js","sourcesContent":["<!--公用组件：\n /**\n  * @desc TableBase\n  * @module @/components\n  * @desc 组件描述：表格插件，整合表格和分页，并添加\n  * @author zkhq\n  * @date 2020/3/2 11:35\n  * @param {Number} [pageSize] - 每页的条数\n  * @param {Number} [currentPage] - 当前页数，从 1 开始，到最大页\n  * @param {Function} [api] - 接口\n  * @param {Array} [staticData] - 静态数据\n  * @param {Number} [pagerCount] - 设置最大页码按钮数，大于等于 5 且小于等于 21 的奇数\n  * @param {Array} [columns] - 每列表头\n  * @param {Boolean} [hideOnSinglePage] - 单页面时是否隐藏分页\n  * @example 调用示例\n  *  <TableBase v-bind=\"tableOptions\"></TableBase>\n  */\n-->\n<template>\n  <div class=\"app-table app-table-pagination-border\">\n    <el-table\n      :data=\"tableData\"\n      stripe\n      @selection-change=\"saveSelectData\"\n      style=\"width: 100%\">\n      <template v-for=\"column in columns\">\n        <el-table-column v-if=\"hasTemplate(column.template)\" v-bind=\"column.attr\" :key=\"column.attr.prop\">\n          <template slot-scope=\"scope\">\n            <component\n              v-for=\"(template, name) in column.template\"\n              :key=\"name\"\n              v-bind:is=\"template.el\"\n              v-model=\"scope.row[scope.column.property]\"\n              v-bind=\"templateAttr(template, scope.$index, scope.row, scope)\"\n              v-events=\"[template, scope.$index, scope.row, scope]\"\n              @click=\"fnC(template.handle, scope.$index, scope.row, scope)\"\n            >{{template.content}}</component>\n          </template>\n        </el-table-column>\n        <el-table-column v-else v-bind=\"column.attr\" :key=\"column.attr.prop\"></el-table-column>\n      </template>\n\n    </el-table>\n    <el-pagination\n      :hide-on-single-page=\"hideOnSinglePage\"\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n      :current-page=\"actualCurrentPage\"\n      :page-sizes=\"[5, 10, 20, 30, 40]\"\n      :page-size=\"actualPageSize\"\n      :pager-count=\"pagerCount\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n      :total=\"total\">\n    </el-pagination>\n  </div>\n</template>\n\n<script>\n// import\nimport {fixedNum, isApi, objC} from '@/utils/common'\n\nexport default {\n  name: 'index',\n  data () {\n    return {\n      // 定义的每个data 属性必须有注释\n      // 注释规则： //\n      // 表格数据\n      tableData: [],\n      // 总条数\n      total: 0,\n      // 是否使用静态数据\n      static: false,\n      // 实际的每页的条数\n      actualPageSize: 10,\n      // 实际的当前页数，从 1 开始\n      actualCurrentPage: 1,\n      selectData: []\n    }\n  },\n  props: {\n    // 每页的条数\n    pageSize: {\n      // default: 10,\n      default: 5,\n      type: Number\n    },\n    // 当前页数，从 1 开始，到最大页\n    // 小于 1 时，显示 1；大于最大值时，显示为最大值；\n    currentPage: {\n      default: 1,\n      type: Number,\n      validator: function (value) {\n        // 这个值必须是整数\n        // 这个值必须大于 0\n        return fixedNum(value, 0) === value && value > 0\n      }\n    },\n    // api 接口\n    api: {\n      default: () => () => Promise.resolve(),\n      type: Function\n    },\n    // api 接口的 query 数据\n    query: {\n      default: () => {},\n      type: Object\n    },\n    // 是否直接加载数据\n    isinit: {\n      default: true,\n      type: Boolean\n    },\n    // 静态数据\n    staticData: {\n      default: () => [],\n      type: Array\n    },\n    // 设置最大页码按钮数，大于等于 5 且小于等于 21 的奇数\n    pagerCount: {\n      default: 5,\n      type: Number\n    },\n    // 每列表头。attr 是 element 自带属性直接绑定\n    // 示例：[{attr:{}}]\n    columns: {\n      default: () => [],\n      type: Array\n    },\n    // 单页面时是否隐藏分页\n    hideOnSinglePage: {\n      default: true,\n      type: Boolean\n    }\n  },\n  components: {},\n  // beforeRouteEnter () {\n  // },\n  // beforeRouteUpdate () {\n  // },\n  // beforeRouteLeave () {\n  // },\n  beforeCreate () {\n  },\n  created () {\n    // 初始化\n    this.init()\n  },\n  beforeMount () {\n  },\n  mounted () {\n  },\n  beforeUpdate () {\n  },\n  updated () {\n  },\n  beforeDestroy () {\n  },\n  destroyed () {\n  },\n  watch: {},\n  computed: {\n    // 最大页数\n    maxPage () {\n      return Math.ceil(this.total / this.actualPageSize)\n    },\n    // 是否传入 api 函数\n    isApi () {\n      return isApi(this.api)\n    }\n  },\n  directives: {\n    events: {\n      // 指令的定义\n      inserted (el, binding, vnode) {\n        let arr = binding.value\n        let events = templateEvents(...arr)\n        for (let i in events) {\n          let v = events[i]\n          let k = i.replace(/[A-Z]/g, match => `-${match.toLowerCase()}`)\n          // 因为update的缘故，所以必须讲原来绑定的函数解绑再绑定一次，以免造成重复触发回调\n          vnode.componentInstance.$off(k)\n          vnode.componentInstance.$on(k, v)\n        }\n\n        /**\n         * @desc 封装事件，添加参数\n         * @param events\n         * @param arr\n         */\n        function templateEvents ({events = {}} = {}, ...arr) {\n          events = {...events}\n          for (let i in events) {\n            let fn = events[i]\n            if (typeof fn === 'function') {\n              events[i] = (event) => fn(event, ...arr)\n            }\n          }\n\n          return events\n        }\n      }\n    }\n  },\n  filter: {},\n  methods: {\n    // 方法调用不需要注释，方法定义需要注释\n    // 方法注释规则 /** */\n    /**\n     * @desc 每页条数发生变化时触发\n     * @param val 每页条数\n     */\n    handleSizeChange (val) {\n      // 设置每页的条数\n      this.actualPageSize = val\n      // 设置当前数据\n      this.setCurrentPageData()\n    },\n    /**\n     * @desc 当前页发生变化时触发\n     * @param val 当前页数\n     */\n    handleCurrentChange (val) {\n      // 设置当前页数\n      this.actualCurrentPage = val\n      // 设置当前数据\n      this.setCurrentPageData()\n    },\n    /**\n     * @desc 初始化\n     */\n    init () {\n      // 设置每页的条数\n      this.actualPageSize = this.pageSize\n      // 设置当前页数\n      this.actualCurrentPage = this.currentPage < 1 ? 1 : this.currentPage\n      // 判断使用静态数据，还是使用请求数据\n      if (objC(this.staticData, 'length')) {\n        this.static = true\n        this.total = this.staticData.length\n      }\n      if (!this.isinit) {\n        return\n      }\n      // 设置当前数据\n      this.setCurrentPageData()\n    },\n    /**\n     * @desc 设置当前数据\n     */\n    setCurrentPageData () {\n      // 如果没有静态数据，且有 api 函数\n      // if (!this.static && this.isApi) {\n      if (!this.static) {\n        this.setCurrentPageDataByApi()\n        return\n      }\n      // 调整当前页数\n      // 可能每页的条数影响最大页数\n      // 可能初始值过大\n      this.actualCurrentPage = this.actualCurrentPage > this.maxPage ? this.maxPage : this.actualCurrentPage\n      // 设置当前页数据\n      let start = (this.actualCurrentPage - 1) * this.actualPageSize\n      let end = this.actualCurrentPage * this.actualPageSize\n      if (this.static) {\n        this.tableData = this.staticData.slice(start, end)\n      }\n    },\n    /**\n     * @desc 刷新当前页\n     */\n    refresh () {\n      this.setCurrentPageData()\n    },\n    /**\n     * @desc 通过 api 设置当前数据\n     */\n    setCurrentPageDataByApi () {\n      this.api({\n        pageSize: this.actualPageSize,\n        pageNumber: this.actualCurrentPage,\n        ...this.query\n      }).then(({data}) => {\n        if (data.code !== 0) {\n          console.log('表格数据错误')\n          return\n        }\n        this.total = objC(data, 'data', 'total') || 0\n        this.tableData = objC(data, 'data', 'content') || []\n      })\n    },\n    /**\n     * @desc 保存当前页选中数据\n     */\n    saveSelectData (selection, row) {\n      this.selectData = selection\n    },\n    /**\n     * @desc 获取当前页选中数据\n     */\n    getSelectData () {\n      return this.selectData\n    },\n    /**\n     * @desc 是否含有模板\n     * @param template\n     * @returns {boolean}\n     */\n    hasTemplate (template) {\n      if (objC(template, 'length')) {\n        return true\n      }\n    },\n    /**\n     * @desc 合并属性\n     * @param attr 属性\n     * @param attrByRow 需要处理的属性\n     * @param arr 行数据\n     * @returns {({})|*}\n     */\n    templateAttr ({attr = {}, attrByRow = {}} = {}, ...arr) {\n      attrByRow = {...attrByRow}\n      for (let i in attrByRow) {\n        let fn = attrByRow[i]\n        if (typeof fn === 'function') {\n          attrByRow[i] = fn(...arr)\n        }\n      }\n\n      return {...attr, ...attrByRow}\n    },\n    /**\n     * @desc 将 common 的方法转为 vue 的方法，使其可在模板中调用\n     * @param {Array} arr 所有参数\n     */\n    fnC (fn, ...arr) {\n      this.$common.fnC(fn)(...arr)\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/table/TableBase.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"app-table app-table-pagination-border\"},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"stripe\":\"\"},on:{\"selection-change\":_vm.saveSelectData}},[_vm._l((_vm.columns),function(column){return [(_vm.hasTemplate(column.template))?_c('el-table-column',_vm._b({key:column.attr.prop,scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return _vm._l((column.template),function(template,name){return _c(template.el,_vm._b({directives:[{name:\"events\",rawName:\"v-events\",value:([template, scope.$index, scope.row, scope]),expression:\"[template, scope.$index, scope.row, scope]\"}],key:name,tag:\"component\",on:{\"click\":function($event){_vm.fnC(template.handle, scope.$index, scope.row, scope)}},model:{value:(scope.row[scope.column.property]),callback:function ($$v) {_vm.$set(scope.row, scope.column.property, $$v)},expression:\"scope.row[scope.column.property]\"}},'component',_vm.templateAttr(template, scope.$index, scope.row, scope),false),[_vm._v(_vm._s(template.content))])})}}])},'el-table-column',column.attr,false)):_c('el-table-column',_vm._b({key:column.attr.prop},'el-table-column',column.attr,false))]})],2),_vm._v(\" \"),_c('el-pagination',{attrs:{\"hide-on-single-page\":_vm.hideOnSinglePage,\"current-page\":_vm.actualCurrentPage,\"page-sizes\":[5, 10, 20, 30, 40],\"page-size\":_vm.actualPageSize,\"pager-count\":_vm.pagerCount,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-73bc7f6c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/table/TableBase.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-73bc7f6c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./TableBase.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./TableBase.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./TableBase.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-73bc7f6c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./TableBase.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-73bc7f6c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/table/TableBase.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}